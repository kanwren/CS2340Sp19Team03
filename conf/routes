# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                                                           controllers.GameController.index
POST    /                                                           controllers.GameController.joinGame

GET     /board                                                      controllers.GameBoardController.boardTest()

# Trigger a game creation and redirect to showGame
GET     /createGame                                                 controllers.GameController.createGame

# Trigger transfer to the Assignment state and redirect to showGame
GET     /startAssignment/$gameId<[A-Za-z0-9]{4}>                    controllers.GameController.startAssignment(gameId)

GET     /startPlay/$gameId<[A-Za-z0-9]{4}>                          controllers.GameController.startPlay(gameId)

# Redirects to the appropriate route based on game state
GET     /$gameId<[A-Za-z0-9]{4}>                                    controllers.GameController.showGame(gameId, playerName: Option[String] ?= None)


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                                               controllers.Assets.versioned(path="/public", file: Asset)


# Game Functionality
GET     /addArmiesToTerritory/:amount/:territoryId/$gameId<[A-Za-z0-9]{4}> controllers.GameController.addArmiesToTerritory(gameId, territoryId: Int, amount: Int)

# Game State endpoints
GET     /endTurn/$gameId<[A-Za-z0-9]{4}>                            controllers.GameController.endTurn(gameId)
GET     /gameInfo/$gameId<[A-Za-z0-9]{4}>                           controllers.GameController.getGameState(gameId)
GET     /territoriesInfo/$gameId<[A-Za-z0-9]{4}>                    controllers.GameController.getTerritoriesData(gameId)
GET     /territoryInfo/:territoryId/$gameId<[A-Za-z0-9]{4}>         controllers.GameController.getTerritoryData(gameId, territoryId: Int)